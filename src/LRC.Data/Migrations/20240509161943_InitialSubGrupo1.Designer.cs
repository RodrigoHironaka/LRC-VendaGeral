// <auto-generated />
using System;
using LRC.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LRC.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20240509161943_InitialSubGrupo1")]
    partial class InitialSubGrupo1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LRC.Business.Entidades.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Situacao")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAlteracaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Grupos", (string)null);
                });

            modelBuilder.Entity("LRC.Business.Entidades.LogAlteracao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Chave")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Historico")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<Guid>("UsuarioCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("LogsAlteracao", (string)null);
                });

            modelBuilder.Entity("LRC.Business.Entidades.Subgrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Situacao")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioAlteracaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioCadastroId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId")
                        .IsUnique();

                    b.ToTable("SubGrupos", (string)null);
                });

            modelBuilder.Entity("LRC.Business.Entidades.Subgrupo", b =>
                {
                    b.HasOne("LRC.Business.Entidades.Grupo", "Grupo")
                        .WithOne("Subgrupo")
                        .HasForeignKey("LRC.Business.Entidades.Subgrupo", "GrupoId")
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("LRC.Business.Entidades.Grupo", b =>
                {
                    b.Navigation("Subgrupo");
                });
#pragma warning restore 612, 618
        }
    }
}
